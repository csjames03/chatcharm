generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

enum Sender {
  AGENT
  FAN
}

model Fan {
  id             String         @id @default(cuid())
  name           String
  avatarUrl      String?
  conversations  Conversation[]
  spendings      Spending[]     @relation("FanSpendings")
  subscribeSince DateTime       @default(now())
  messages       Message[]      @relation("FanMessages") // Fan as message sender
}

model Agent {
  id             String         @id @default(cuid())
  name           String
  avatarUrl      String?
  conversations  Conversation[]
  messages       Message[]      @relation("AgentMessages") // Agent as message sender
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Spending {
  id        String   @id @default(cuid())
  fan       Fan      @relation(fields: [fanId], references: [id], name: "FanSpendings")
  fanId     String
  amount    Float
  date      DateTime @default(now())
}

model Conversation {
  id            String    @id @default(cuid())
  fan           Fan       @relation(fields: [fanId], references: [id])
  fanId         String
  agent         Agent     @relation(fields: [agentId], references: [id])
  agentId       String
  priority      Priority  @default(MEDIUM)
  messages      Message[]
}

model Message {
  id             String       @id @default(cuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  senderType     Sender       // AGENT or FAN
  fan            Fan?         @relation("FanMessages", fields: [fanId], references: [id])
  fanId          String?
  agent          Agent?       @relation("AgentMessages", fields: [agentId], references: [id])
  agentId        String?
  text           String
  timestamp      DateTime     @default(now())
}

model Template {
  id    String @id @default(cuid())
  title String
  text  String
}
